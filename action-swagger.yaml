openapi: 3.0.0
info:
  title: Bot Action Server
  description: Allows custom Rocket League bots to accept tactical suggestions in
    the middle of a game.
  contact:
    email: rlbotofficial@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about RLBot
  url: http://www.rlbot.org/
servers:
- url: /
tags:
- name: action
  description: Actions that the bot can take
paths:
  /action/currentlyAvailable:
    get:
      tags:
      - action
      operationId: get_actions_currently_available
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableActions'
  /action/choose:
    post:
      tags:
      - action
      operationId: choose_action
      requestBody:
        description: Action to choose
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionChoice'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "400":
          description: Invalid status value
components:
  schemas:
    StrategicCategory:
      type: string
      enum:
      - neutral
      - offense
      - defense
    BotAction:
      required:
      - name
      - strategicCategory
      type: object
      properties:
        name:
          type: string
          example: gatherBoost
        strategicCategory:
          $ref: '#/components/schemas/StrategicCategory'
      example:
        name: gatherBoost
        strategicCategory: neutral
    AvailableActions:
      type: object
      properties:
        currentAction:
          $ref: '#/components/schemas/BotAction'
        availableActions:
          type: array
          items:
            $ref: '#/components/schemas/BotAction'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Succesfully processed operation
      example:
        code: 200
        message: Succesfully processed operation
    ActionChoice:
      type: object
      properties:
        name:
          type: string
          example: gatherBoost
